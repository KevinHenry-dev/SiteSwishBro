{% extends 'base.html.twig' %}

{% block title %}Liste des événements{% endblock %}

{% block body %}
    <h1 class="text-center">Événements</h1>

<div class="container text-center">
  <div class="row d-flex align-items-center">
    <div class="col-md-9 col-lg-10 mx-auto">
      <div class="table-responsive">
        <table id="table" class="table table-striped table-hover table-bordered text-center">
          <thead class="table-warning">
            <tr>
                {% if is_granted('ROLE_ADMIN') %}
                <th>Id</th>
                {% endif %}
                <th>Titre</th>
                <th>Début</th>
                <th>Fin</th>
                <th>Description</th>
                <th>Terrain</th>
                <th>Journée</th>
                <th>Participants</th>
                <th>Participer</th>
                
            </tr>
        </thead>
        <tbody>
       
            
                <tr>
                    {% set nbReservations = event.reservations|length %}
                    {% if is_granted('ROLE_ADMIN') %}
                    <td>{{ event.id }}</td>
                    {% endif %}
                    <td>{{ event.title }}</td>
                    <td>{{ event.start ? event.start|date('d/m/Y H:i:s') : '' }}</td>
                    <td>{{ event.end ? event.end|date('d/m/Y H:i:s') : '' }}</td>
                    <td>{{ event.description }}</td>
                    {% if event.terrain is not null %}
                            <td>{{ event.terrain.getNomTdb() ~ ' - ' ~ event.terrain.getAdresseTdb() ~ ' - ' ~ event.terrain.getLibelleVille() }}</td>
                            {% else %}
                            <td>Pas de terrain associé</td>
                            {% endif %}
                    <td>{{ event.allDay ? 'Yes' : 'No' }}</td>
                    <td>{{ nbReservations }}</td>
                    <td>
                      {% if app.user in event.reservations|map(reservation => reservation.getIdUser()) %}
                      <div 
                        id="reserver{{ event.id }}" 
                        data-id="{{ event.id}}" 
                        data-action="retirer"
                        class="alert alert-warning w-100 my-2 checkReservation" 
                        style="cursor:pointer"
                      >
                        Annuler la réservation
                      </div>
                      {% elseif nbReservations >= 10 %}
                        <div class="alert alert-danger w-100 my-2">
                            Complet
                        </div>
                      {% else %}
                        <div    
                          id="reserver{{ event.id }}" 
                          data-id="{{ event.id}}" 
                          data-action="ajouter"
                          class="alert alert-success w-100 my-2 checkReservation" 
                          style="cursor:pointer"
                          >
                          Reservé
                        </div>
                      {% endif %}
                    </td>
                     
                </tr>
            
        </tbody>
    </table>
      <div class="text-start">
        <a href="{{ path('app_calendar_show') }}" class="btn btn-outline-primary shadow">Retour</a>
      </div>

{% endblock %}



{% block javascripts %}

	<script>
	// Attendre que le document soit complètement chargé avant d'exécuter le code
document.addEventListener('DOMContentLoaded', () => {
  // Sélectionner tous les éléments avec la classe 'checkReservation'
  document.querySelectorAll('.checkReservation').forEach((element) => {
    // Ajouter un écouteur d'événement 'click' pour chaque élément
    element.addEventListener('click', (event) => {
      // Récupérer l'ID du calendrier à partir de l'attribut data-id de l'élément cliqué
      let calendarId = event.currentTarget.dataset.id;
      // Récupérer l'action à partir de l'attribut data-action de l'élément cliqué
      let action = event.currentTarget.dataset.action;
      // Définir l'URL pour la requête fetch en utilisant une route Symfony
      const url = '{{ path('app_participation') }}';
      // Envoyer une requête POST à l'URL définie
      fetch(url, {
        method: 'POST', // Utiliser la méthode POST
        headers: {
          'Content-Type': 'application/json', // Spécifier le type de contenu comme JSON
          'X-Requested-With': 'XMLHttpRequest' // Indiquer que c'est une requête AJAX
        },
        // Convertir les données en JSON et les inclure dans le corps de la requête
        body: JSON.stringify({
          calendarId: calendarId, // Inclure l'ID du calendrier
          action: action, // Inclure l'action
        }),
      })
        // Traiter la réponse et la convertir en JSON
        .then(response => response.json())
        // Gérer les données reçues
        .then(data => {
          if (data.success) {
            // Si la réponse indique un succès, recharger la page
            location.reload();
          } else {
            // Sinon, afficher un message d'erreur
            alert(data.error || 'Une erreur est survenue');
          }
        })
        // Gérer les erreurs de la requête
        .catch(error => console.log('ERROR:', error));
    });
  });
});

	</script>
{% endblock %}
